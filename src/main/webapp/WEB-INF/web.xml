<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="WebApp_ID" version="3.0">
    <display-name>mybatis</display-name>

    <!-- 指定配置文件：读取spring配置文件 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring.xml,classpath:spring-mybatis.xml</param-value>
    </context-param>

    <!-- 设计路径变量值 -->
    <!--<context-param>-->
        <!--<param-name>mybatisdemo1</param-name>-->
        <!--<param-value>springmvc.root</param-value>-->
    <!--</context-param>-->
    <!-- 设置webAppRootKey(默认value是webapp.root),可以在log4j.properties里面通过${myWebApp.root}获取当前项目路径 -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>myWebApp.root</param-value>
    </context-param>
    <!-- 日志记录 -->
    <context-param>
        <!-- 日志配置文件路径 -->
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <!-- 日志页面的刷新间隔:
        log4jRefreshInterval为60000表示 开一条watchdog线程每6秒扫描一下配置文件的变化 -->
        <param-name>log4jRefreshInterval</param-name>
        <param-value>6000</param-value>
    </context-param>

    <!--注册JSTL的i18n事件，value必需指定为全路径-->
    <context-param>
        <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
        <!--<param-name>org.springframework.web.servlet.support.JstlUtils</param-name>-->
        <param-value>com.mybatis.i18n.ssm</param-value>
    </context-param>

    <!--Log4jInitServlet-->
    <servlet>
        <servlet-name>Log4jInitServlet</servlet-name>
        <servlet-class>com.mybatis.servlet.Log4jInitServlet</servlet-class>
        <init-param>
            <param-name>log4jInit</param-name>
            <param-value>WEB-INF\classes\log4j.properties</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>


    <!--由于spring也会加载log4j.properties，如果加载不到就往控制台打log信息。
    Spring提供了 一个Log4jConfigListener，本身就能通过web.xml中配置来指定位置加载log4j
    配置文件和log输出路径，
    ***注意该 listener需要放在spring的Listener之前***  -->
    <listener>
        <description>Log4jConfigListener</description>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <!--字符集过滤器,通过spring的Filter对所有请求统一设置诶UTF-8-->
    <filter>
        <description>字符集过滤器</description>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <description>字符集编码</description>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--Spring 监听器-->
    <listener>
        <description>spring监听器</description>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- 防止spring内存溢出监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>

    <!-- spring mvc servlet -->
    <servlet>
        <description>spring mvc servlet</description>
        <servlet-name>springMvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <description>spring mvc 配置文件</description>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- 解决HTTP PUT请求Spring无法获取请求参数的问题
      <filter>
           <filter-name>HiddenHttpMethodFilter</filter-name>
            <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
      </filter>
       <filter-mapping>
           <filter-name>HiddenHttpMethodFilter</filter-name>
          <servlet-name>springMvc</servlet-name>
        </filter-mapping>-->


    <!-- 错误跳转页面 -->
    <error-page>
        <!-- 路径不正确 -->
        <error-code>404</error-code>
        <location>/WEB-INF/errorPage/404.html</location>
    </error-page>
    <error-page>
        <!-- 没有访问权限，访问被禁止 -->
        <error-code>405</error-code>
        <location>/WEB-INF/errorPage/405.jsp</location>
    </error-page>
    <error-page>
        <!-- 内部错误 -->
        <error-code>500</error-code>
        <location>/WEB-INF/errorPage/500.jsp</location>
    </error-page>
    <!-- 配置异常处理 -->
    <error-page>
        <exception-type>javax.servlet.ServletException</exception-type>
        <location>/WEB-INF/errorPage/error.html</location>
    </error-page>
    <error-page>
        <exception-type>java.lang.NullPointerException</exception-type>
        <location>/WEB-INF/errorPage/error.html</location>
    </error-page>
    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>

    <!-- 配置session超时时间，单位分钟 -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
</web-app>